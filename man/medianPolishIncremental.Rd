% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/incrementalRMA.R
\name{medianPolishIncremental}
\alias{medianPolishIncremental}
\title{Median polish fit}
\usage{
medianPolishIncremental(pms, probe_names, params = NULL)
}
\arguments{
\item{pms}{Perfect-match matrix representing the gene expression.}

\item{probe_names}{Array of probenames such as returned from
\code{\link[affy]{probeNames}}}

\item{params}{An incremental parameter list as generated by
\code{\link{parameterizeRMA}}}
}
\value{
Expression values corresponding to probesets defined by the probe_names parameter.
}
\description{
Given an existing median polish model, apply to new data and
return resulting median polish.
}
\details{
The RMA approach involves using median polish to summarize a set of
probes for a set of samples. Briefly, median polish removes row
medians then column medians repeatedly until a stopping criteria
is achieved. See \code{\link[stats]{medpolish}} for details on the
median polish.

The incremental nature of this median polish approach means that
final state probe-wise effects have already been calculated (and
stored). Thus for a sample, the precalculated probe-wise effects
are subtracted from the signal and a probeset-wide median is
calculated. This is the used as the probeset expression estimate.
}
\note{
The incremental median polish information is stored
within the params object as the list \code{probeEffects}.

If the params object is NULL then a default median polish
is performed.
}
\examples{

\dontrun{
medianPolishIncremental(pm(AffyBatch), probeNames(AffyBatch), NULL)
}

}
